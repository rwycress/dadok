-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- user Table Create SQL
CREATE TABLE chickengak.user
(
    `no`         INT              NOT NULL    AUTO_INCREMENT COMMENT '유저번호', 
    `name`       VARCHAR(45)      NOT NULL    COMMENT '이름', 
    `nickname`   VARCHAR(45)      NOT NULL    COMMENT '닉네임', 
    `id`         VARCHAR(45)      NOT NULL    COMMENT '아이디', 
    `password`   VARCHAR(75)      NOT NULL    COMMENT '비밀번호', 
    `phone`      VARCHAR(60)      NULL        COMMENT '연락처', 
    `email`      VARCHAR(120)     NOT NULL    COMMENT '이메일', 
    `profile`    VARCHAR(768)     NULL        COMMENT '프로필사진URL', 
    `birth`      DATE             NULL        COMMENT '생년월일', 
    `info`       VARCHAR(3000)    NULL        COMMENT '소개글', 
    `join_date`  DATETIME         NOT NULL    DEFAULT now() COMMENT '가입일', 
    PRIMARY KEY (no)
);

ALTER TABLE chickengak.user COMMENT '사용자';

ALTER TABLE chickengak.user
    ADD CONSTRAINT UC_id UNIQUE (id);

ALTER TABLE chickengak.user
    ADD CONSTRAINT UC_email UNIQUE (email);


-- user Table Create SQL
CREATE TABLE chickengak.public_board
(
    `no`         INT              NOT NULL    AUTO_INCREMENT COMMENT '번호', 
    `title`      VARCHAR(90)      NOT NULL    COMMENT '제목', 
    `content`    VARCHAR(3000)    NOT NULL    COMMENT '내용', 
    `tag`        VARCHAR(300)     NULL        COMMENT '태그', 
    `download`   INT              NOT NULL    DEFAULT 0 COMMENT '다운로드 횟수', 
    `source`     VARCHAR(600)     NULL        COMMENT '출처', 
    `user_no`    INT              NOT NULL    COMMENT '작성자번호', 
    `data_url`   VARCHAR(768)     NULL        COMMENT '자료 URL', 
    `create_at`  DATETIME         NOT NULL    DEFAULT now() COMMENT '생성일자', 
    `update_at`  DATETIME         NULL        COMMENT '수정일자', 
    `view`       INT              NOT NULL    DEFAULT 0 COMMENT '조회수', 
    PRIMARY KEY (no)
);

ALTER TABLE chickengak.public_board COMMENT '공개게시판';

ALTER TABLE chickengak.public_board
    ADD CONSTRAINT FK_public_board_user_no_user_no FOREIGN KEY (user_no)
        REFERENCES chickengak.user (no) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- user Table Create SQL
CREATE TABLE chickengak.request_board
(
    `no`         INT              NOT NULL    AUTO_INCREMENT COMMENT '번호', 
    `user_no`    INT              NOT NULL    COMMENT '작성자', 
    `title`      VARCHAR(90)      NOT NULL    COMMENT '제목', 
    `content`    VARCHAR(3000)    NOT NULL    COMMENT '내용', 
    `complete`   INT              NOT NULL    DEFAULT 0 COMMENT '완료유무', 
    `view`       INT              NOT NULL    DEFAULT 0 COMMENT '조회수', 
    `create_at`  DATETIME         NOT NULL    DEFAULT now() COMMENT '생성일시', 
    `update_at`  DATETIME         NULL        COMMENT '완료유무 변경일시', 
    PRIMARY KEY (no)
);

ALTER TABLE chickengak.request_board COMMENT '자료요청 게시판';

ALTER TABLE chickengak.request_board
    ADD CONSTRAINT FK_request_board_user_no_user_no FOREIGN KEY (user_no)
        REFERENCES chickengak.user (no) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- user Table Create SQL
CREATE TABLE chickengak.like
(
    `board_no`  INT    NOT NULL    COMMENT '보드번호', 
    `user_no`   INT    NOT NULL    COMMENT '유저번호', 
    `no`        INT    NOT NULL    AUTO_INCREMENT COMMENT '번호', 
    `type`      INT    NOT NULL    COMMENT '보드 타입', 
    PRIMARY KEY (no)
);

ALTER TABLE chickengak.like COMMENT '퍼블릭보드 좋아요';

ALTER TABLE chickengak.like
    ADD CONSTRAINT FK_like_user_no_user_no FOREIGN KEY (user_no)
        REFERENCES chickengak.user (no) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- user Table Create SQL
CREATE TABLE chickengak.sensor
(
    `no`         INT             NOT NULL    AUTO_INCREMENT COMMENT '센서데이터 번호', 
    `val`        INT             NULL        COMMENT '소리값', 
    `url`        VARCHAR(768)    NULL        COMMENT '저장 URL', 
    `create_at`  DATETIME        NOT NULL    DEFAULT now() COMMENT '생성시간', 
    `user_no`    INT             NOT NULL    COMMENT '유저번호', 
    PRIMARY KEY (no)
);

ALTER TABLE chickengak.sensor COMMENT '센서데이터';

ALTER TABLE chickengak.sensor
    ADD CONSTRAINT FK_sensor_user_no_user_no FOREIGN KEY (user_no)
        REFERENCES chickengak.user (no) ON DELETE RESTRICT ON UPDATE RESTRICT;


